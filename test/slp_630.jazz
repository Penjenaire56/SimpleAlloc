export fn p(reg u64 A, reg u64 B, reg u64 C) {
	reg u64 r1;
	reg u64 r0;
	reg u64 r9;
	reg u64 r4;
	reg u64 r3;
	reg u64 r28;
	reg u64 r13;
	reg u64 r18;
	reg u64 r12;
	reg u64 r7;
	reg u64 r5;
	reg u64 r2;
	reg u64 r8;
	reg u64 tmp;
	stack u64 r6;
	stack u64 r21;
	stack u64 r11;
	stack u64 r24;
	stack u64 r17;
	stack u64 r15;
	stack u64 r14;
	stack u64 r29;
	stack u64 r27;
	stack u64 r23;
	stack u64 r19;
	stack u64 r10;
	stack u64 r30;
	stack u64 r26;
	stack u64 r25;
	stack u64 r22;
	stack u64 r20;
	stack u64 r16;
	r27 = (u64)[B + 64 * 5];
	r17 = (u64)[B + 64 * 4];
	r2 = (u64)[B + 64 * 3];
	r29 = (u64)[B + 64 * 2];
	r28 = (u64)[B + 64 * 1];
	r18 = (u64)[B + 64 * 0];
	r8 = (u64)[A + 64 * 5];
	r11 = (u64)[A + 64 * 4];
	r12 = (u64)[A + 64 * 3];
	r7 = (u64)[A + 64 * 2];
	r24 = (u64)[A + 64 * 1];
	r21 = (u64)[A + 64 * 0];
	r1 = r12;
	r0 = r21;
	r5 = r0 + r1;
	r1 = r11;
	r0 = r24;
	tmp = r0 + r1;
	r15 = tmp;
	r1 = r8;
	r0 = r7;
	tmp = r0 + r1;
	r6 = tmp;
	r1 = r2;
	r0 = r18;
	r0 = r0 + r1;
	r3 = r17;
	r1 = r28;
	r1 = r1 + r3;
	r4 = r27;
	r3 = r29;
	r3 = r3 + r4;
	r9 = r3;
	r4 = r15;
	tmp = r4 * r9;
	r23 = tmp;
	r9 = r1;
	r4 = r6;
	tmp = r4 * r9;
	r26 = tmp;
	r9 = r3;
	r4 = r6;
	tmp = r4 * r9;
	r22 = tmp;
	r9 = r0;
	r4 = r5;
	tmp = r4 * r9;
	r10 = tmp;
	r9 = r1;
	r4 = r5;
	r4 = r4 * r9;
	r13 = r0;
	r9 = r15;
	tmp = r9 * r13;
	r16 = tmp;
	r5 = r5 * r3;
	tmp = r1 * r15;
	r15 = tmp;
	tmp = r0 * r6;
	r6 = tmp;
	r1 = r18;
	r0 = r21;
	r3 = r0 * r1;
	r1 = r29;
	r0 = r24;
	tmp = r0 * r1;
	r14 = tmp;
	r1 = r28;
	r0 = r7;
	tmp = r0 * r1;
	r20 = tmp;
	r1 = r2;
	r0 = r12;
	r0 = r0 * r1;
	r9 = r28;
	r1 = r21;
	r9 = r1 * r9;
	r13 = r18;
	r1 = r24;
	tmp = r1 * r13;
	r25 = tmp;
	r13 = r29;
	r1 = r7;
	r13 = r1 * r13;
	r19 = r17;
	r1 = r12;
	tmp = r1 * r19;
	r19 = tmp;
	r30 = r2;
	r1 = r11;
	r1 = r1 * r30;
	tmp = r21;
	tmp = tmp * r29;
	r21 = tmp;
	tmp = r28 * r24;
	r24 = tmp;
	r7 = r7 * r18;
	r18 = r27;
	r12 = r12 * r18;
	r28 = r17;
	r18 = r11;
	r18 = r18 * r28;
	r28 = r8;
	r2 = r28 * r2;
	r28 = r27;
	tmp = r28 * r11;
	r11 = tmp;
	r28 = r8;
	tmp = r28 * r17;
	r17 = tmp;
	r8 = r8 * r27;
	tmp = r23;
	tmp = tmp + r26;
	r23 = tmp;
	r9 = r9 + r25;
	tmp = r21;
	tmp = tmp + r24;
	r21 = tmp;
	r3 = r3 + r23;
	r9 = r9 + r22;
	r7 = r7 + r21;
	tmp = r14;
	tmp = tmp + r20;
	r14 = tmp;
	r13 = r13 + r19;
	r12 = r12 + r18;
	tmp = r17;
	tmp = tmp + r11;
	r11 = tmp;
	r4 = r4 + r16;
	r5 = r5 + r15;
	r0 = r0 + r14;
	r14 = r3;
	r0 = r0 + r14;
	r1 = r13 + r1;
	r13 = r9;
	r1 = r1 + r13;
	r2 = r12 + r2;
	r12 = r7;
	r2 = r2 + r12;
	tmp = r11;
	tmp = tmp + r10;
	r10 = tmp;
	r3 = r3 + r10;
	r8 = r9 + r8;
	r4 = r8 + r4;
	tmp = r7 + r6;
	r6 = tmp;
	r5 = r5 + r6;
	(u64)[C + 64 * 0] = r0;
	(u64)[C + 64 * 1] = r1;
	(u64)[C + 64 * 2] = r2;
	(u64)[C + 64 * 3] = r3;
	(u64)[C + 64 * 4] = r4;
	(u64)[C + 64 * 5] = r5;

}
